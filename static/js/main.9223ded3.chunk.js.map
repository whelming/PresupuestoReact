{"version":3,"sources":["components/Header.js","components/Formulario.js","components/Gasto.js","components/Presupuesto.js","components/Resto.js","components/ListaGastos.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","Component","Formulario","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","enviarGasto","e","preventDefault","objGasto","uuid","descripcion","descripcionRef","current","value","monto","montoRef","fecha","fechaRef","currentTarget","reset","agregarGasto","React","createRef","onSubmit","htmlFor","readOnly","defaultValue","ref","Gasto","midato","gasto","Presupuesto","presupuesto","Resto","getAlertColor","_this$props","resto","ListaGastos","gastos","Fragment","Presupuesto_Presupuesto","Resto_Resto","map","Gasto_Gasto","key","App","migasto","state","push","setState","console","log","Header_Header","Formulario_Formulario","ListaGastos_ListaGastos","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9223ded3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Features</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport uuid from 'uuid';\r\n\r\nexport default class Formulario extends Component {\r\n  descripcionRef;\r\n  montoRef;\r\n  fechaRef;\r\n  constructor(props){\r\n    super(props);\r\n    this.descripcionRef = React.createRef();\r\n    this.montoRef = React.createRef();\r\n    this.fechaRef = React.createRef();\r\n  }\r\n\r\n  enviarGasto = (e) => {\r\n    e.preventDefault();\r\n    let objGasto = {\r\n      id: uuid(),\r\n      descripcion: this.descripcionRef.current.value,\r\n      monto: this.montoRef.current.value,\r\n      fecha: this.fechaRef.current.value,\r\n\r\n    }\r\n    e.currentTarget.reset();\r\n    this.props.agregarGasto(objGasto);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.enviarGasto}>\r\n          <fieldset>\r\n            <h3>Gastos</h3>\r\n\r\n\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\r\n              <div className=\"col-sm-10\">\r\n                <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"staticEmail\" defaultValue=\"email@example.com\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputEmail1\">desc gasto</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Ejm cpmida\"\r\n                      ref={this.descripcionRef}\r\n              />\r\n              {/* <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small> */}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">monyto gasto</label>\r\n              <input type=\"number\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"jm 100\"\r\n                      ref={this.montoRef} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"fechaInputPassword1\">fecha gasto</label>\r\n              <input type=\"date\" className=\"form-control\" id=\"fechaInputPassword1\"\r\n              ref={this.fechaRef}\r\n               />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Gasto extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n  }\r\n  render() {\r\n    let midato = this.props.gasto;\r\n    return (\r\n      <div>\r\n        <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n            <div className=\"d-flex w-100 justify-content-between\">\r\n              <h5 className=\"mb-1\">S/. {midato.monto}</h5>\r\n              <small>FECHA: {midato.fecha}</small>\r\n            </div>\r\n            <p className=\"mb-1\">DESC: {midato.descripcion}</p>\r\n            <small>S/. {midato.id}</small>\r\n          </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Presupuesto extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"alert alert-dismissible alert-light\">\r\n        Tu Peesupusto <strong>S/. {this.props.presupuesto}</strong>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nPresupuesto.propTypes = {\r\n  presupuesto: PropTypes.number.isRequired,\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Resto extends Component {\r\n\r\n  getAlertColor = () => {\r\n    const { presupuesto, resto } = this.props;\r\n    if (resto >= presupuesto / 2) {\r\n      return \"alert alert-success\"\r\n    }\r\n    else if (resto >= presupuesto / 4) {\r\n      return \"alert alert-warning\"\r\n    }\r\n    return \"alert alert-danger\"\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className= {this.getAlertColor()}>\r\n        Te queda <strong>S/. {this.props.resto}</strong>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Gasto from './Gasto';\r\nimport Presupuesto from './Presupuesto';\r\nimport Resto from './Resto';\r\n\r\nexport default class ListaGastos extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n\r\n    let { gastos } = this.props;\r\n    let { presupuesto } = this.props;\r\n    let { resto } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        \r\n        <div className=\"list-group\">\r\n          <h3>Lista</h3>\r\n          <Presupuesto presupuesto={presupuesto}/>\r\n          <Resto resto={resto} presupuesto={presupuesto}/>\r\n          {gastos.map((gasto) => \r\n            <Gasto key={gasto.id} gasto={gasto} />\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport Header from '../src/components/Header';\nimport Formulario from './components/Formulario';\nimport ListaGastos from './components/ListaGastos';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      gastos : [],\n      presupuesto: 1000,\n      resto: 1000,\n    }\n  }\n\n  migasto;\n  agregarGasto = (migasto) => {\n    this.migasto = migasto;\n    let {gastos} = this.state;\n    gastos.push(migasto);\n    this.setState({\n      gastos,\n      resto : this.state.resto - migasto.monto,\n    })\n    console.log(this.state.gastos);\n\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <Formulario agregarGasto={this.agregarGasto} />\n            </div>\n            <div className=\"col-6\">\n              <ListaGastos gastos={this.state.gastos} presupuesto={this.state.presupuesto} resto={this.state.resto}/>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}